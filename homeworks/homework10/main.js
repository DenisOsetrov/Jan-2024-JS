
//************************************ 1 task **************************************
//**********************************************************************************

// Стоврити форму з трьома полями для name, surname, age та кнопкою.
// При натисканні на кнопку зчитати данні з полів, та вивести об'єкт в документ.
// Іншими словами : заповнити форму, натиснули кнопку, під формою з'явився блок з вашим об'єктом


// Отримуємо посилання на форму
// const userForm = document.getElementById('userForm');
// console.log(userForm)

// Отримуємо посилання на кнопку
const submitBtn = document.getElementById('submitBtn');

// Додаємо обробник події click на кнопку
submitBtn.addEventListener('click', function () {

    // Отримуємо значення полів форми
    const name = document.getElementById('name').value;
    const surname = document.getElementById('surname').value;
    const age = document.getElementById('age').value;

    // Створюємо об'єкт з отриманими даними
    const userData = {
        Name: name,
        Surname: surname,
        Age: age
    };

    // Виводимо об'єкт у блок з id="output"
    const resultDiv = document.getElementById('getForm');

    resultDiv.innerHTML = ''; // Очищаємо блок перед виведенням

    for (const key in userData) {
        // Створюємо новий елемент для кожного ключа і значення
        const paragraph = document.createElement('p');
        paragraph.textContent = `${key}: ${userData[key]}`;
        // Додаємо елемент до блоку
        resultDiv.appendChild(paragraph);
    }
});

// ********************************************* 2 task ****************************************************
// *********************************************************************************************************

// є сторінка, на якій є блок, я кому знаходиьтся цифра.
// Написати код, який при кожному перезавантажені сторінки буде додавати до неї +1
// Отримуємо значення лічильника з локального сховища.
// Якщо значення не знайдено, встановлюємо значення за замовчуванням 0.



// Отримуємо значення лічильника з localStorage та перетворюємо його на ціле число за допомогою parseInt().
// Якщо значення відсутнє в локальному сховищі або не може бути перетворено на число, використовується значення за замовчуванням 0.
const count = parseInt(localStorage.getItem('count')) || 0;

// Знаходимо елемент з ідентифікатором 'numCounter' у HTML документі.
const element = document.getElementById('numCounter');

// Додаємо 1 до значення лічильника та перетворюємо результат у рядок.
const newCount = (count + 1);

// Встановлюємо нове значення лічильника у вмісті елементу 'numCounter'.
element.innerText = newCount;

// Зберігаємо нове значення лічильника у локальному сховищі під ключем 'count'.
localStorage.setItem('count', newCount);

// Очищаємо всі дані збережені в локальному сховищі. Усі збережені дані будуть втрачені.
// localStorage.clear();


// Зрозумілий варіант вкидання значення
// Функція для скидання лічильника та очищення локального сховища
function resetCounter() {
    localStorage.clear(); // Очистити всі дані в локальному сховищі
    document.getElementById('numCounter').innerText = '0'; // Скинути лічильник на 0
}

// Додаємо обробник події для кнопки "Скинути лічильник"
document.getElementById('resetButton').addEventListener('click', resetCounter);



// 2 варіант скидання значення з повним завантаженням сторінки

// document.addEventListener('DOMContentLoaded', function() {
//     const element = document.getElementById('numCounter');
//
//     // Функція для оновлення лічильника
//     function resetCounter() {
//         localStorage.setItem('count', '0');
//         document.getElementById('numCounter').innerText = '0';
//     }
//
//     // Додаємо обробник події для кнопки "Оновити лічильник"
//     document.getElementById('resetButton').addEventListener('click', resetCounter);
//
//     // Отримуємо значення лічильника з локального сховища або встановлюємо значення за замовчуванням 0
//     // const count = localStorage.getItem('count');
//
//     // Встановлюємо поточне значення лічильника на сторінці
//     element.innerText = count.toString(); // toString - за проханням IntelliJ, можна не ставити!
// });











// Є сторінка index.html (назва довільна), при відвідуванні якої в локальне сховще, в масив sessions зберігається інформація про дату та час відвідування сторінки. Є ще сторінка sessions.html (назва довільна), при відвідуванні якої потрібно відмалювати всю інформацію про відвідування сторінки index.html. Інфу НЕ виводити в консоль, а побудувати дом структуру під кожну сессію







// зробити масив на 100 об'єктів та дві кнопки prev next
// при завантажені сторінки з'являються перші 10 об'єктів.
// При натисканні next виводяться настпні 10 об'єктів
// При натисканні prev виводяться попередні 10 об'єктів
//
//
//
//
// - Створити довільний елемент з id = text та створити кнопку.Використовуючи JavaScript, зробіть так, щоб при натисканні на кнопку зникав елемент з id="text".
//
//
// - створити інпут який приймає вік людини та кнопку яка підтверджує дію.При натисканні на кнопку зчитати інформацію з інпуту та перевірити вік чи меньше він ніж 18, та повідомити про це користувача
//
//
// *** Створити 3 інпута та кнопку. Один визначає кількість рядків, другий - кількість ячеєк, третій вмиіст ячеєк.
// При натисканні кнопки, вся ця інформація зчитується і формується табличка, з відповідним вмістом.
// (Додатковачастина для завдання)
//
// *** (подібне було вище, але...будьте уважні в другій частині) створити сторінку з довільним блоком, в середині якого є значення "100грн"
// при перезавантаженні сторінки до значаення додається по 10грн, але !!!
//  зміна ціни відбувається тільки на перезавантаження, які відбулись пізніше ніж 10 секунд після попереднього.
//  При перезавантаженні, яке відбулось раніше ніж минуло 10 секунд - нічого не відбувається